{"version":3,"sources":["redux/types.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/actions.js","redux/middleware.js","Likes.js","Title.js","SingleComment.js","Comments.js","Spin.js","App.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","initialState","likes","text","comments","intialState","loading","error","rootReducer","combineReducers","likesReducer","state","action","type","inputReducer","commentsReducer","data","commentsNew","map","res","name","id","itemIndex","findIndex","nextComments","slice","appReducer","loaderOff","errorOn","dispatch","setTimeout","badWords","connect","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useSelector","useDispatch","onChange","e","inputText","target","value","SingleComment","useState","commentText","setCommentText","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","textComment","setTextComment","a","fetch","response","json","jsonData","uniqid","commentCreate","length","Spin","spinner","color","height","width","visible","App","src","alt","store","createStore","compose","applyMiddleware","thunk","next","some","includes","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.485593e3.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const INPUT_TEXT = 'INPUT_TEXT';\nexport const COMMENT_CREATE = 'COMMENT_CREATE';\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\n\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON';\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF';\n\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON';\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF';","import { INCREMENT, DECREMENT } from \"./types\";\n\nconst initialState = {\n  likes: 0,\n};\n\nexport const likesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        likes: state.likes + 1,\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        likes: state.likes - 1,\n      };\n    default:\n      return state;\n  }\n};\n","import { INPUT_TEXT } from \"./types\";\n\nconst initialState = {\n  text: '',\n};\n\nexport const inputReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INPUT_TEXT:\n      return {\n        ...state,\n        text: action.text\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  COMMENTS_LOAD,\n  COMMENT_CREATE,\n  COMMENT_DELETE,\n  COMMENT_UPDATE,\n} from \"./types\";\n\nconst initialState = {\n  comments: [],\n};\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENT_CREATE:\n      return {\n        ...state,\n        comments: [...state.comments, action.data],\n      };\n\n    case COMMENTS_LOAD:\n      const commentsNew = action.data.map((res) => {\n        return {\n          text: res.name,\n          id: res.id,\n        };\n      });\n      return {\n        ...state,\n        comments: commentsNew,\n      };\n\n    case COMMENT_UPDATE:\n      const { data } = action;\n      const { comments } = state;\n      const itemIndex = comments.findIndex((res) => res.id === data.id);\n\n      const nextComments = [\n        ...comments.slice(0, itemIndex),\n        data,\n        ...comments.slice(itemIndex + 1),\n      ];\n      return {\n        ...state,\n        comments: nextComments,\n      };\n\n    case COMMENT_DELETE:\n      return (() => {\n        const { id } = action;\n        const { comments } = state;\n        const itemIndex = comments.findIndex((res) => res.id === id);\n\n        const nextComments = [\n          ...comments.slice(0, itemIndex),\n          ...comments.slice(itemIndex + 1),\n        ];\n        return {\n          ...state,\n          comments: nextComments,\n        };\n      })();\n\n    default:\n      return state;\n  }\n};\n","import {\n  LOADER_DISPLAY_ON,\n  LOADER_DISPLAY_OFF,\n  ERROR_DISPLAY_ON,\n  ERROR_DISPLAY_OFF,\n} from \"./types\";\n\nconst intialState = {\n  loading: false,\n  error: null,\n};\n\nexport const appReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case LOADER_DISPLAY_ON:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOADER_DISPLAY_OFF:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case ERROR_DISPLAY_ON:\n      return {\n        ...state,\n        error: action.text,\n      };\n\n    case ERROR_DISPLAY_OFF:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { likesReducer } from \"./likesReducer\";\nimport { inputReducer } from \"./inputReducer\";\nimport { commentsReducer } from \"./commentsReducer\";\nimport { appReducer } from \"./appReducer\";\n\nexport const rootReducer = combineReducers({\n  likesReducer,\n  inputReducer,\n  commentsReducer,\n  appReducer,\n});\n","import {\n  INCREMENT,\n  DECREMENT,\n  INPUT_TEXT,\n  COMMENT_CREATE,\n  COMMENT_UPDATE,\n  COMMENT_DELETE,\n  COMMENTS_LOAD,\n  LOADER_DISPLAY_ON,\n  LOADER_DISPLAY_OFF,\n  ERROR_DISPLAY_ON,\n  ERROR_DISPLAY_OFF,\n} from \"./types\";\n\nexport function incrementLikes() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrementLikes() {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport function inputText(text) {\n  return {\n    type: INPUT_TEXT,\n    text,\n  };\n}\n\nexport function commentCreate(text, id) {\n  return {\n    type: COMMENT_CREATE,\n    data: { text, id },\n  };\n}\n\nexport function commentUpdate(text, id) {\n  return {\n    type: COMMENT_UPDATE,\n    data: { text, id },\n  };\n}\n\nexport function commentDelete(id) {\n  return {\n    type: COMMENT_DELETE,\n    id,\n  };\n}\n\nexport function loaderOn() {\n  return {\n    type: LOADER_DISPLAY_ON,\n  };\n}\nexport function loaderOff() {\n  return {\n    type: LOADER_DISPLAY_OFF,\n  };\n}\n\nexport function errorOn(text) {\n  return (dispatch) => {\n    dispatch({\n      type: ERROR_DISPLAY_ON,\n      text,\n    });\n\n    setTimeout(() => {\n      dispatch(errorOff());\n    }, 2000);\n  };\n}\nexport function errorOff() {\n  return {\n    type: ERROR_DISPLAY_OFF,\n  };\n}\n\nexport function commentsLoad() {\n  return async (dispatch) => {\n    try {\n      dispatch(loaderOn());\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/comments?_limit=10\"\n      );\n      const jsonData = await response.json();\n\n      setTimeout(() => {\n        dispatch({\n          type: COMMENTS_LOAD,\n          data: jsonData,\n        });\n        dispatch(loaderOff());\n      }, 1000);\n    } catch (err) {\n      dispatch(errorOn(\"Ошибка API\"));\n      dispatch(loaderOff());\n    }\n  };\n}\n","import { COMMENT_CREATE } from './types';\r\nimport { errorOn } from './actions';\r\n\r\nconst badWords = ['козел', 'осел'];\r\n\r\nexport function spamFilter({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      if (action.type === COMMENT_CREATE) {\r\n        const hasBadWords = badWords.some(res => action.data.text.includes(res));\r\n        if (hasBadWords) {\r\n          return dispatch(errorOn('Уважайте людей!'));\r\n        }\r\n      }\r\n      return next(action);\r\n    }\r\n  }\r\n}","import { connect } from 'react-redux';\nimport {incrementLikes, decrementLikes} from './redux/actions';\n\nfunction Likes (props) {\n  return (\n    <div className='button-controls'>\n      <button onClick={props.onIncrementLikes}>❤ {props.likes}</button>\n      <button onClick={props.onDecrementLikes}>Dislike</button>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const {likesReducer} = state;\n  return {\n    likes: likesReducer.likes\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onIncrementLikes: () =>  dispatch(incrementLikes()),\n    onDecrementLikes: () => dispatch(decrementLikes())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import { useDispatch, useSelector } from \"react-redux\";\nimport { inputText } from \"./redux/actions\";\n\nfunction Title(props) {\n  const text = useSelector((state) => {\n    const { inputReducer } = state;\n    return inputReducer.text;\n  });\n  \n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(inputText(e.target.value));\n  };\n\n  return (\n    <div className=\"card-title\">\n      <div className=\"card-title-top\">\n        <input type=\"text\" onChange={handleChange} />\n      </div>\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default Title;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { commentUpdate, commentDelete } from \"./redux/actions\";\n\nfunction SingleComment({ data }) {\n  const [commentText, setCommentText] = useState(\"\");\n  const { text, id } = data;\n  const dispatch = useDispatch();\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    dispatch(commentUpdate(commentText, id));\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(commentDelete(id));\n  }\n\n  useEffect(() => {\n    if (text) {\n      setCommentText(text);\n    }\n  }, [text]);\n\n  const handleInput = (e) => {\n    setCommentText(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleUpdate} className=\"comments-item\">\n      <div onClick={handleDelete} className=\"comments-item-delete\">&times;</div>\n      <input type=\"text\" value={commentText} onChange={handleInput} />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nexport default SingleComment;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport uniqid from \"uniqid\";\nimport SingleComment from \"./SingleComment\";\nimport { commentCreate, commentsLoad } from \"./redux/actions\";\n\nfunction Comments(props) {\n  const [textComment, setTextComment] = useState(\"\");\n  const comments = useSelector((state) => {\n    const { commentsReducer } = state;\n    return commentsReducer.comments;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleInput = (e) => {\n    setTextComment(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uniqid();\n    dispatch(commentCreate(textComment, id));\n  };\n\n  useEffect(() => {\n    dispatch(commentsLoad());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"card-comments\">\n      <form onSubmit={handleSubmit} className=\"comments-item-create\">\n        <input type=\"text\" value={textComment} onChange={handleInput} />\n        <input type=\"submit\" hidden />\n      </form>\n      {!!comments.length &&\n        comments.map((res) => {\n          return <SingleComment key={res.id} data={res} />;\n        })}\n    </div>\n  );\n}\n\nexport default Comments;\n","import { useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spin = (props) => {\n  const spinner = useSelector((state) => state.appReducer.loading);\n\n  return (\n    <div className=\"loader-styles\">\n      <Loader\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        visible={spinner}\n      />\n    </div>\n  );\n};\n\nexport default Spin;\n","import { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Likes from \"./Likes\";\nimport Title from \"./Title\";\nimport Comments from \"./Comments\";\nimport Spin from \"./Spin\";\n\nfunction App() {\n  const error = useSelector((state) => state.appReducer.error);\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && <div className=\"error-message\">{error}</div>}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\" />\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { spamFilter } from './redux/middleware';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}